{"version":3,"sources":["additional-methods.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"common.js","sourcesContent":["// Modificando mensajes de validación\njQuery.extend(jQuery.validator.messages, {\n    required: \"Requerido.\",\n    number: \"Por favor ingrese un número válido.\",\n    email: \"Introduzca una dirección válida.\",\n    date: \"Introduzca una fecha válida (dd/mm/aaaa).\",\n    maxlength: jQuery.validator.format(\"Por favor debe ingresar hasta {0} caracteres.\"),\n    minlength: jQuery.validator.format(\"Por favor se requiere un valor de {0} caracteres.\"),\n    rangelength: jQuery.validator.format(\"Por favor ingrese un valor entre {0} y {1} caracteres.\"),\n    minStrict: jQuery.validator.format(\"La cantidad debe ser mayor a cero.\")\n});\n$.validator.addMethod('minStrict', function (value, el, param) {\n    return value > param;\n});\n// Rules Only Caps tex_fac\n$.validator.addMethod(\"onlyCaps\", function(value, element) {\n    return this.optional(element) || /[A-Z]/.test(value);\n}, \"Sólo caracteres en mayúscula.\");\n\n$.validator.addMethod(\"noSpace\", function(value, element) {\n    return value.indexOf(\" \") < 0 && value != \"\";\n}, \"No puede haber espacio.\");\n\n$.validator.addMethod(\"isEmail\", function(value, element) {\n    if (this.optional(element) || /^([a-zA-Z0-9_.+-])+\\@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(value)) {\n        return true;\n    }else{\n        return false;\n    }\n}, \"Debe ingresar un email válido.\");\n$.validator.addMethod(\"lettersOnly\", function(value, element) {\n    return this.optional(element) || /^[a-z0-9A-Z\\/\\-\\,\\.\\u00E0-\\u00FC\\s]*$/i.test(value);\n},\"Por favor, sólo puede ingresar letras y números\");\n\n$.validator.addMethod(\"excludeletters\", function(value, element) {\n    return this.optional(element) || /^(\\w+\\s?)*$/i.test(value);\n},\"Caracteres no permitidos\");\n\n$.validator.addMethod(\"numberAndLetters\", function(value, element) {\n    return this.optional(element) || /^[a-z0-9\\-]+$/i.test(value);\n}, \"El campo puede contener solo letras y números.\");\n\n$.validator.addMethod(\"validDate\", function( value, element ) {\n    return this.optional(element) || /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/.test(value);\n}, \"La fecha debe coincidir con (dd/mm/aaaa).\");\n\n$.validator.addMethod(\"unique\", function (value, element) {\n    var parentForm = $(element).closest('form');\n    var timeRepeated = 0;\n    if (value != '') {\n        $(parentForm.find(':text')).each(function () {\n            if ($(this).val() === value) {\n                timeRepeated++;\n            }\n        });\n    }\n    return timeRepeated === 1 || timeRepeated === 0;\n\n}, \"* Duplicate\");"]}